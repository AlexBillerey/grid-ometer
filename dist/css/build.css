/*** uncss> filename: src/css/normalize.css ***/

/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */

/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */

html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/**
 * Remove default margin.
 */

body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */

/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */

header,
section {
  display: block;
}

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */

/* Links
   ========================================================================== */

/**
 * Remove the gray background color from active links in IE 10.
 */

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */

/* Text-level semantics
   ========================================================================== */

/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */

/**
 * Address styling not present in Safari and Chrome.
 */

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */

h1 {
  font-size: 2em;
  /* margin: 0.67em 0;*/
  margin: 0;
}

/**
 * Address styling not present in IE 8/9.
 */

/**
 * Address inconsistent and variable font size in all browsers.
 */

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */

/* Embedded content
   ========================================================================== */

/**
 * Remove border when inside `a` element in IE 8/9/10.
 */

/**
 * Correct overflow not hidden in IE 9/10/11.
 */

/* Grouping content
   ========================================================================== */

/**
 * Address margin not present in IE 8/9 and Safari.
 */

/**
 * Address differences between Firefox and other browsers.
 */

/**
 * Contain overflow in all browsers.
 */

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */

/* Forms
   ========================================================================== */

/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */

/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */

input {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */

/**
 * Re-set default cursor for disabled elements.
 */

/**
 * Remove inner padding and border in Firefox 4+.
 */

button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */

input {
  line-height: normal;
}

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */

/**
 * Define consistent border, margin, and padding.
 */

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */

legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */

/* Tables
   ========================================================================== */

/**
 * Remove most spacing between table cells.
 */

/*** uncss> filename: src/css/main.css ***/

/*
 * What follows is the result of much research on cross-browser styling.
 * Credit left inline and big thanks to Nicolas Gallagher, Jonathan Neal,
 * Kroc Camen, and the H5BP dev community and team.
 */

/* ==========================================================================
   Base styles: opinionated defaults
   ========================================================================== */

html {
  color: #222;
  font-size: 1em;
  line-height: 1.4;
  -webkit-transition: all .2s linear 0s;
  transition: all .2s linear 0s;
}

/*
 * Remove text-shadow in selection highlight:
 * https://twitter.com/miketaylr/status/12228805301
 *
 * These selection rule sets have to be separate.
 * Customize the background color to match your design.
 */

::-moz-selection {
  background: #b3d4fc;
  text-shadow: none;
}

::selection {
  background: #b3d4fc;
  text-shadow: none;
}

/*
 * A better looking default horizontal rule
 */

/*
 * Remove the gap between audio, canvas, iframes,
 * images, videos and the bottom of their containers:
 * https://github.com/h5bp/html5-boilerplate/issues/440
 */

/*
 * Remove default fieldset styles.
 */

fieldset {
  border: 0;
  margin: 0;
  padding: 0;
}

/*
 * Allow only vertical resizing of textareas.
 */

/* ==========================================================================
   Browser Upgrade Prompt
   ========================================================================== */

/* ==========================================================================
   Author's custom styles
   ========================================================================== */

header,
section {
  display: flex;
}

header {
  padding: 1em 1em 0;
}

.no-js form {
  display: none;
}

form {
  padding: 0 1em 1em;
  background: rgba(216, 210, 40, 0.29);
  width: 100%;
}

input[type=range] {
  -webkit-appearance: none;
  margin: 10px 0;
  width: 100%;
}

input[type=range]:focus {
  outline: none;
}

input[type=range]::-webkit-slider-runnable-track {
  width: 100%;
  height: 12.8px;
  cursor: pointer;
  animate: 0.2s;
  box-shadow: 0px 0px 0px #000000, 0px 0px 0px #0d0d0d;
  background: #ac51b5;
  border-radius: 25px;
  border: 0px solid #000101;
  box-shadow: 3px 3px 5px rgba(52, 52, 52, 0.38);
}

input[type=range]::-webkit-slider-thumb {
  box-shadow: 0px 0px 0px #000000, 0px 0px 0px #0d0d0d;
  border: 0px solid #000000;
  height: 39px;
  width: 39px;
  border-radius: 50%;
  background: #65001c;
  cursor: pointer;
  -webkit-appearance: none;
  margin-top: -12px;
  -webkit-transition: all .25s linear 0s;
  -moz-transition: all .25s linear 0s;
  -ms-transition: all .25s linear 0s;
  -o-transition: all .25s linear 0s;
  transition: all .25s linear 0s;
  box-shadow: 3px 3px 5px rgba(52, 52, 52, 0.38);
}

input[type=range]:focus::-webkit-slider-thumb {
  background: rgba(255, 0, 74, 0.37);
  /*box-shadow: 3px 3px 5px rgba(52, 52, 52, 0.38);*/
  box-shadow: none;
}

input[type=range]:focus::-webkit-slider-runnable-track {
  background: #ac51b5;
}

input[type=range]::-moz-range-track {
  width: 100%;
  height: 12.8px;
  cursor: pointer;
  animate: 0.2s;
  box-shadow: 0px 0px 0px #000000, 0px 0px 0px #0d0d0d;
  background: #ac51b5;
  border-radius: 25px;
  border: 0px solid #000101;
}

input[type=range]::-moz-range-thumb {
  box-shadow: 0px 0px 0px #000000, 0px 0px 0px #0d0d0d;
  border: 0px solid #000000;
  height: 39px;
  width: 39px;
  border-radius: 50%;
  background: #65001c;
  cursor: pointer;
  -webkit-appearance: none;
  margin-top: -12px;
  -webkit-transition: all .25s linear 0s;
  -moz-transition: all .25s linear 0s;
  -ms-transition: all .25s linear 0s;
  -o-transition: all .25s linear 0s;
  transition: all .25s linear 0s;
}

input[type=range]::-ms-track {
  width: 100%;
  height: 12.8px;
  cursor: pointer;
  animate: 0.2s;
  background: transparent;
  border-color: transparent;
  border-width: 39px 0;
  color: transparent;
}

input[type=range]::-ms-fill-lower {
  background: #f0f23e;
  border: 0px solid #000101;
  border-radius: 50px;
  box-shadow: 0px 0px 0px #000000, 0px 0px 0px #0d0d0d;
}

input[type=range]::-ms-fill-upper {
  background: #ac51b5;
  border: 0px solid #000101;
  border-radius: 50px;
  box-shadow: 0px 0px 0px #000000, 0px 0px 0px #0d0d0d;
}

input[type=range]::-ms-thumb {
  box-shadow: 0px 0px 0px #000000, 0px 0px 0px #0d0d0d;
  border: 0px solid #000000;
  height: 39px;
  width: 39px;
  border-radius: 7px;
  background: #65001c;
  cursor: pointer;
}

input[type=range]:focus::-ms-fill-lower {
  background: #ac51b5;
}

input[type=range]:focus::-ms-fill-upper {
  background: #ac51b5;
}

/*see http://danielstern.ca/range.css/?ref=css-tricks#/ */

/*
output {
    background: #e6eab9;
}

input[type=range] {
    -webkit-appearance: none;
    width: 100%;
    margin: 1em 0;
}

input[type=range]:focus {
    outline: none;
}

input[type=range]::-webkit-slider-runnable-track {
    width: 100%;
    height: 30.6px;
    cursor: pointer;
    box-shadow: 0px 0px 0px #002200, 0px 0px 0px #003c00;
    background: #ffffff;
    border-radius: 1px;
    border: none;
}

input[type=range]::-webkit-slider-thumb {
    box-shadow: 0px 0px 0px #000000, 0px 0px 0px #0d0d0d;
    border: solid 1px #656565;
    height: 50px;
    width: 50px;
    border-radius: 50%;
    background: #ffffff;
    cursor: pointer;
    -webkit-appearance: none;
    margin-top: -10.8px;
}

input[type=range]:focus::-webkit-slider-runnable-track {
    background: #ffffff;
}

input[type=range]::-moz-range-track {
    width: 100%;
    height: 30.6px;
    cursor: pointer;
    box-shadow: 0px 0px 0px #002200, 0px 0px 0px #003c00;
    background: #ffffff;
    border-radius: 1px;
    border: none;
}

input[type=range]::-moz-range-thumb {
    box-shadow: 0px 0px 0px #000000, 0px 0px 0px #0d0d0d;
    border: solid 1px #656565;
    height: 50px;
    width: 50px;
    border-radius: 50%;
    background-image: radial-gradient(circle, #ffffff, rgba(101, 101, 101, 0.26));
    cursor: pointer;
    -webkit-transition: all .25s linear 0s;
    transition: all .25s linear 0s;
}

input[type=range]:focus::-moz-range-thumb {
    background-image: radial-gradient(circle closest-side, #656565, #ffffff);
    -webkit-transition: all .25s linear 0s;
    transition: all .25s linear 0s;
}

input[type=range]:after::-moz-range-thumb {
}

input[type=range]::-ms-track {
    width: 100%;
    height: 30.6px;
    cursor: pointer;
    background: transparent;
    border-color: transparent;
    color: transparent;
}

input[type=range]::-ms-fill-lower {
    background: #f7f7f7;
    border: none;
    border-radius: 2px;
    box-shadow: 0px 0px 0px #002200, 0px 0px 0px #003c00;
}

input[type=range]::-ms-fill-upper {
    background: #ffffff;
    border: none;
    border-radius: 2px;
    box-shadow: 0px 0px 0px #002200, 0px 0px 0px #003c00;
}

input[type=range]::-ms-thumb {
    box-shadow: 0px 0px 0px #000000, 0px 0px 0px #0d0d0d;
    border: solid 1px #656565;
    height: 50px;
    width: 50px;
    border-radius: 50%;
    background: #ffffff;
    cursor: pointer;
    height: 30.6px;
}

input[type=range]:focus::-ms-fill-lower {
    background: #ffffff;
}

input[type=range]:focus::-ms-fill-upper {
    background: #ffffff;
}*/

.column {
  flex-direction: column;
}

/* ==========================================================================
   Helper classes
   ========================================================================== */

/*
 * Hide visually and from screen readers
 */

/*
 * Hide only visually, but have it available for screen readers:
 * http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 */

/*
 * Extends the .visuallyhidden class to allow the element
 * to be focusable when navigated to via the keyboard:
 * https://www.drupal.org/node/897638
 */

/*
 * Hide visually and from screen readers, but maintain layout
 */

/*
 * Clearfix: contain floats
 *
 * For modern browsers
 * 1. The space content is one way to avoid an Opera bug when the
 *    `contenteditable` attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of elements
 *    that receive the `clearfix` class.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 */

/* ==========================================================================
   EXAMPLE Media Queries for Responsive Design.
   These examples override the primary ('mobile first') styles.
   Modify as content requires.
   ========================================================================== */

@media only screen and (min-width: 768px) {
  /* Style adjustments for viewports that meet the condition */

  .wrapper {
    width: 100%;
    margin: 0 auto;
    box-sizing: border-box;
    max-width: 1200px;
    padding: 0 1em 0 .5em;
    transition: all .25s linear 0s;
  }

  .row {
    margin: 1em 0 0;
    padding: 0 1em;
    display: flex;
    justify-content: space-between;
  }

  .row:after {
    clear: both;
  }

  [class^="col"] {
    box-sizing: border-box;
    padding: .25em;
    flex-grow: 0;
    flex-shrink: 0;
    border: solid 1px #000;
    border-top: 0;
  }

  .wrapper,
  .row,
  [class^="col"] {
    box-sizing: border-box;
  }

  .col_span_1_of_12 {
    flex-basis: 5.5833%;
  }

  .col_span_2_of_12 {
    flex-basis: 14.1667%;
  }

  .col_span_3_of_12 {
    flex-basis: 22.7500%;
  }

  .col_span_4_of_12 {
    flex-basis: 31.3333%;
  }

  .col_span_5_of_12 {
    flex-basis: 39.9167%;
  }

  .col_span_6_of_12 {
    flex-basis: 48.5000%;
  }

  .col_span_7_of_12 {
    flex-basis: 57.0833%;
  }

  .col_span_8_of_12 {
    flex-basis: 65.6667%;
  }

  .col_span_9_of_12 {
    flex-basis: 74.2500%;
  }

  .col_span_10_of_12 {
    flex-basis: 82.8333%;
  }

  .col_span_11_of_12 {
    flex-basis: 91.4167%;
  }

  .col_span_12_of_12 {
    flex-basis: 100.0000%;
  }
}

@media only screen and (min-width: 961px) {
  .wrapper {
    padding: 0;
  }
}

@media print,
(-webkit-min-device-pixel-ratio: 1.25),
(min-resolution: 1.25dppx),
(min-resolution: 120dpi) {
  /* Style adjustments for high resolution devices */
}

/* =






























=========================================================================
   Print styles.
   Inlined to avoid the additional HTTP request:
   http://www.phpied.com/delay-loading-your-print-css/
   ========================================================================== */

@media print {
  *,
  *:before,
  *:after {
    background: transparent !important;
    color: #000 !important;
    /* Black prints faster:
                                   http://www.sanbeiji.com/archives/953 */
    box-shadow: none !important;
    text-shadow: none !important;
  }

  /*
     * Don't show links that are fragment identifiers,
     * or use the `javascript:` pseudo protocol
     */

  /*
     * Printing Tables:
     * http://css-discuss.incutio.com/wiki/Printing_Tables
     */

  p {
    orphans: 3;
    widows: 3;
  }
}

/*# sourceMappingURL=data:application/json;base64, */
